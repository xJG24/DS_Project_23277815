syntax = "proto3";

option java_multiple_files = true;
option java_package = "ds.VitalSignsControlService";
option java_outer_classname = "VitalSignControlServiceImpl";

package ds.VitalSignsControlService;

service VitalSignsControlService {
	rpc GetVitalSignsLatest_do(GetVitalSignsRequest) returns (GetVitalSignsLatestResponse);
	rpc GetVitalSignsHistory_do(GetVitalSignsRequest) returns (stream GetVitalSignsHistoryResponse);
	rpc SetVitalSigns_do(stream SetVitalSignsRequest) returns (SetVitalSignsResponse);
	rpc MonitorVitalSignsReading(stream VitalSignsMonitorRequest) returns (stream VitalSignsMonitorResponse);
}

enum OperationalStatus {
	Undefined = 0;
	Success = 1;
	Failure = 2;
	Error = 3;
}

message GetVitalSignsRequest{
	int32 patientID = 1;
}

message GetVitalSignsLatestResponse {
	int32 patientID = 1;
	int32 heartRateBPM = 2;
	double bodyTemp = 3;
	int32 Spo2 = 4;
	string time = 5;
}

message GetVitalSignsHistoryResponse {
	int32 patientID = 1;
	int32 heartRateBPM = 2;
	double bodyTemp = 3;
	int32 Spo2 = 4;
	string time = 5;
}

message SetVitalSignsRequest {
	int32 patientID = 1;
	int32 heartRateBPM = 2;
	double bodyTemp = 3;
	int32 Spo2 = 4;
	string time = 5;
}

message SetVitalSignsResponse {
	int32 patientID = 1;
	OperationalStatus result = 2;
	string statusMessage = 3;
}

message VitalSignsMonitorRequest {
	int32 patientID = 1;
	int32 heartRateBPM = 2;
	double bodyTemp = 3;
	int32 Spo2 = 4;
	string time = 5;
}

message VitalSignsMonitorResponse {
	int32 patientID = 1;
    OperationalStatus result = 2;
    string statusMessage = 3;
}
